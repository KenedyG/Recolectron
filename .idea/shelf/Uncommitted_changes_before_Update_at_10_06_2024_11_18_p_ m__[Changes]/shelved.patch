Index: src/main/java/Datos/LoginDAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Datos;\r\n\r\nimport Modelo.LoginJB;\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class LoginDAO {\r\n    private static final String selectSQL = \"SELECT * FROM login\";\r\n    private static final String insertSQL = \"INSERT INTO login (usuario,password) VALUES (?,?)\";\r\n    private static final String updateSQL = \"UPDATE login SET usuario = ?, password = ?\";\r\n    private static final String deleteSQL = \"DELETE FROM login WHERE  id_user = ?\";\r\n\r\n    public List<LoginJB> login() {\r\n        Connection con = null;\r\n        PreparedStatement state = null;\r\n        ResultSet result = null;\r\n\r\n        List<LoginJB> login = new ArrayList<>();\r\n\r\n        try {\r\n            con = Conexion.getConnection();\r\n            state = con.prepareStatement(selectSQL);\r\n            result = state.executeQuery();\r\n            while(result.next()) {\r\n                String usuario = result.getString(\"usuario\");\r\n                String password = result.getString(\"password\");\r\n                LoginJB loginJB = new LoginJB(usuario,password);\r\n                login.add(loginJB);\r\n            }\r\n        }catch (Exception e) {\r\n            e.printStackTrace();\r\n        }finally {\r\n            Conexion.close(result);\r\n            Conexion.close(state);\r\n            Conexion.close(con);\r\n        }\r\n        return login;\r\n    }\r\n    public void agregarUsuario(LoginJB login) {\r\n        Connection con = null;\r\n        PreparedStatement state = null;\r\n\r\n        try {\r\n            con = Conexion.getConnection();\r\n            state = con.prepareStatement(insertSQL);\r\n            state.setString(1, login.getUsuario());\r\n            state.setString(2, login.getPassword());\r\n            state.executeUpdate();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }finally {\r\n            Conexion.close(state);\r\n            Conexion.close(con);\r\n        }\r\n    }\r\n    public void actualizarUsuario(LoginJB login) {\r\n        Connection con = null;\r\n        PreparedStatement state = null;\r\n\r\n        try {\r\n            con = Conexion.getConnection();\r\n            state = con.prepareStatement(updateSQL);\r\n            state.setString(1, login.getUsuario());\r\n            state.setString(2, login.getPassword());\r\n            state.setInt(3, login.getIduser());\r\n            state.executeUpdate();\r\n        }catch (Exception e) {\r\n            e.printStackTrace();\r\n        }finally {\r\n            Conexion.close(state);\r\n            Conexion.close(con);\r\n        }\r\n    }\r\n    public void eliminarUsuario(LoginJB login) {\r\n        Connection con = null;\r\n        PreparedStatement state = null;\r\n\r\n        try {\r\n            con = Conexion.getConnection();\r\n            state = con.prepareStatement(deleteSQL);\r\n            state.setInt(1, login.getIduser());\r\n            state.executeUpdate();\r\n        }catch (Exception e) {\r\n            e.printStackTrace();\r\n        }finally {\r\n            Conexion.close(state);\r\n            Conexion.close(con);\r\n        }\r\n    }\r\n    /*Metodo para iniciar sesion, fase de prueba*/\r\n    public boolean validar(String usuario, String password) {\r\n        Connection con = null;\r\n        PreparedStatement state = null;\r\n        ResultSet result = null;\r\n        boolean existe = false;\r\n        try {\r\n            con = Conexion.getConnection();\r\n            state = con.prepareStatement(\"SELECT password FROM login WHERE usuario = ?\");\r\n            state.setString(1, usuario);\r\n            if(result.next()){\r\n                String pass = result.getString(\"password\");\r\n                if(password.equals(pass)){\r\n                    existe = true;\r\n                    System.out.println(\"Contraseña correcta crack :D\");\r\n                }else{\r\n                    System.out.println(\"Contraseña incorrecta fiera D:\");\r\n                }\r\n            }else {\r\n                System.out.println(\"Usuario no ha encontrado\");\r\n            }\r\n        }catch (Exception e) {\r\n            e.printStackTrace();\r\n        }finally {\r\n            Conexion.close(result);\r\n            Conexion.close(state);\r\n            Conexion.close(con);\r\n        }\r\n        return existe;\r\n    }\r\n\r\n    public int detector(String usuario) {\r\n        Connection con = null;\r\n        PreparedStatement state = null;\r\n        ResultSet result = null;\r\n        int status = 0;\r\n\r\n        try{\r\n            con = Conexion.getConnection();\r\n            state = con.prepareStatement(\"SELECT status FROM login WHERE usuario = ?\");\r\n            state.setString(1, usuario);\r\n            result = state.executeQuery();\r\n            if(result.next()){\r\n                status = result.getInt(\"status\");\r\n            }\r\n        }catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        return status;\r\n    }\r\n\r\n}\r\n
===================================================================
diff --git a/src/main/java/Datos/LoginDAO.java b/src/main/java/Datos/LoginDAO.java
--- a/src/main/java/Datos/LoginDAO.java	
+++ b/src/main/java/Datos/LoginDAO.java	
@@ -67,7 +67,6 @@
             state = con.prepareStatement(updateSQL);
             state.setString(1, login.getUsuario());
             state.setString(2, login.getPassword());
-            state.setInt(3, login.getIduser());
             state.executeUpdate();
         }catch (Exception e) {
             e.printStackTrace();
